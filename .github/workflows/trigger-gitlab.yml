# This is a basic workflow to help you get started with Actions

name: Trigger GitLab CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - test-gitlab-trigger
  pull_request:
    branches:
      - master
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "trigger-gitlab-pipeline"
  trigger-gitlab-pipeline:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Extract branch name
      shell: bash
      # $GITHUB_HEAD_REF is the source branch name
      # $GITHUB_BASE_REF is the PR destination branch
      # If we want to test that tests pass on the destination branch (e.g. master and develop) after merge, we probably want to add `master` and `develop` to the list of branches to run the CI on `push` and not just `pull_request`
      run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
      id: extract_branch

    # Runs a set of commands using the runners shell
    - name: Trigger GitLab CI
      env:
        GITLAB_CI_TRIGGER_URL: ${{ secrets.GITLAB_CI_TRIGGER_URL }}
        GITLAB_CI_TRIGGER_TOKEN: ${{ secrets.GITLAB_CI_TRIGGER_TOKEN }}
      run: |
        echo Running on ref ${GITHUB_REF##*/}
        echo Trigger CI pipeline
        curl -X POST \
           -F token=${GITLAB_CI_TRIGGER_TOKEN} \
           -F "ref=master" \
           -F "variables[GITHUB_REF]=${{ steps.extract_branch.outputs.branch }}" \
           ${GITLAB_CI_TRIGGER_URL}
